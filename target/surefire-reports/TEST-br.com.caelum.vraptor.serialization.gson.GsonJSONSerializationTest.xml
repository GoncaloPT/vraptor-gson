<?xml version="1.0" encoding="UTF-8" ?>
<testsuite failures="0" time="0.822" errors="0" skipped="2" tests="22" name="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/jdk1.7.0_01/jre/lib/amd64"/>
    <property name="java.vm.version" value="21.1-b02"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="BR"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/renan/workspace/vraptor-gson"/>
    <property name="java.runtime.version" value="1.7.0_01-b08"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/jdk1.7.0_01/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven2/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="51.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="3.2.0-24-generic"/>
    <property name="user.home" value="/home/renan"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="1.7"/>
    <property name="user.name" value="renan"/>
    <property name="java.class.path" value="/usr/share/maven2/boot/classworlds.jar"/>
    <property name="java.vm.specification.version" value="1.7"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/jdk1.7.0_01/jre"/>
    <property name="sun.java.command" value="org.codehaus.classworlds.Launcher &quot;test&quot;"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="pt"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.7.0_01"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/jdk1.7.0_01/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/jdk1.7.0_01/jre/lib/resources.jar:/usr/lib/jvm/jdk1.7.0_01/jre/lib/rt.jar:/usr/lib/jvm/jdk1.7.0_01/jre/lib/sunrsasign.jar:/usr/lib/jvm/jdk1.7.0_01/jre/lib/jsse.jar:/usr/lib/jvm/jdk1.7.0_01/jre/lib/jce.jar:/usr/lib/jvm/jdk1.7.0_01/jre/lib/charsets.jar:/usr/lib/jvm/jdk1.7.0_01/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/share/maven2"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase time="0.538" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldOptionallyIncludeChildField"/>
  <testcase time="0.004" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldOptionallyExcludeChildField"/>
  <testcase time="0.006" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldOptionallyIncludeListChildFields"/>
  <testcase time="0.003" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldOptionallyExcludeFieldsFromIncludedListChildFields"/>
  <testcase time="0.003" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldOptionallyRemoveRoot"/>
  <testcase time="0.003" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldOptionallyRemoveRootIdented"/>
  <testcase time="0.029" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldRunHibernateLazyInitialization"/>
  <testcase time="0.031" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldUseCollectionConverterWhenItExists">
    <skipped/>
  </testcase>
  <testcase time="0.003" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldSerializeAllBasicFieldsIdented"/>
  <testcase time="0.002" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldUseAlias"/>
  <testcase time="0.004" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldSerializeEnumFields"/>
  <testcase time="0.003" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldSerializeCollection"/>
  <testcase time="0.003" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldSerializeCollectionWithPrefixTag"/>
  <testcase time="0.003" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldExcludeNonPrimitiveFieldsFromACollection"/>
  <testcase time="0.004" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldSerializeCollectionWithPrefixTagAndNamespace">
    <skipped/>
  </testcase>
  <testcase time="0.003" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldSerializeParentFields"/>
  <testcase time="0.004" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldExcludeNonPrimitiveParentFields"/>
  <testcase time="0.005" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldExcludeParentFields"/>
  <testcase time="0.003" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldOptionallyExcludeFields"/>
  <testcase time="0.003" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldOptionallyIncludeFieldAndNotItsNonPrimitiveFields"/>
  <testcase time="0.003" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldSerializeGenericClass"/>
  <testcase time="0.002" classname="br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest" name="shouldSerializeAllBasicFields"/>
</testsuite>